/*

https://projecteuler.net/problem=8

The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.

73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450

Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?
*/
Last login: Sat May 27 20:37:44 on ttys000
~ ❯❯❯ cd Projects
~/Projects ❯❯❯ ls
ILoveMyCat    euler         lift-omniauth undrewb
Interviews    euler-bak     lift_26_sbt   wraith
PostRope      glfw          review
~/Projects ❯❯❯ cd euler
~/P/euler ❯❯❯ ls
scala
~/P/euler ❯❯❯ cd scala
~/P/e/scala ❯❯❯
~/P/e/scala ❯❯❯ ls
blah                 problem14.scala      problem6.scala
checksum.scala       problem2.scala       problem7.scala
hello-euler          problem21.scala      problem8.scala
problem1.scala       problem22.scala      problem9.scala
problem10.scala      problem3.scala       stockPrices.scala
problem11.scala      problem3a.scala      sudoku-alpha.scala
problem12.scala      problem4.scala       sudoku.scala
problem13.scala      problem5.scala       tripleProducts.scala
~/P/e/scala ❯❯❯ git status
On branch master
Your branch and 'origin/master' have diverged,
and have 3 and 4 different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)

You have unmerged paths.
  (fix conflicts and run "git commit")
  (use "git merge --abort" to abort the merge)

Changes to be committed:
	new file:   problem13.scala
	new file:   problem9.scala

Unmerged paths:
  (use "git add <file>..." to mark resolution)
	both added:      problem11.scala
	both added:      problem12.scala
	both added:      problem7.scala

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   problem10.scala

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	../.DS_Store
	problem21.scala
	problem22.scala

~/P/e/scala ❯❯❯ git pull
error: Pulling is not possible because you have unmerged files.
hint: Fix them up in the work tree, and then use 'git add/rm <file>'
hint: as appropriate to mark resolution and make a commit.
fatal: Exiting because of an unresolved conflict.
~/P/e/scala ❯❯❯ find . -name "prob*8*.scala" -print                           ⏎
./problem8.scala
~/P/e/scala ❯❯❯ less problem8.scala
/*

https://projecteuler.net/problem=8

Largest product in a series

Problem 8
The four adjacent digits in the 1000-digit number that have the greatest produc>

73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450

Find the thirteen adjacent digits in the 1000-digit number that have the greate>

*/
object problem8 {
  
  def n_str = """7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"""
    
  def adjacent_sets = n_str.sliding(13,1)

  def long_adjacent_sets = adjacent_sets.map(v => v.map(_.asDigit.toLong)).toList

  def answer = long_adjacent_sets.map(arr => arr.foldLeft(1L)(_*_)).max

  /** The main entry point for an Euler solution. Just calls `answer`. */
  def main (args :Array[String]) = println(answer)
}
